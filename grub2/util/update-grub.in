#! /bin/sh -e

# Generate grub.cfg by inspecting /boot contents.
# Copyright (C) 2006, 2007 Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St - Suite 330, Boston, MA 02110, USA.

transform="@program_transform_name@"

sysconfdir=@sysconfdir@
grub_prefix=`echo /boot/grub | sed ${transform}`
grub_cfg=${grub_prefix}/grub.cfg
update_grub_dir=${sysconfdir}/grub.d
test_mode=false

if [ "x$UID" = "x" ] ; then
  UID=`id -u`
fi

if [ "$UID" != 0 ] ; then
  echo "$0: You must run this as root" >&2
  exit 1
fi

if [ "$1" = "-y" ] ; then
  echo "$0: warning: Ignoring -y option (no longer needed)." >&2
fi

if test -d ${update_grub_dir} ; then : ; else
  if test -d ./grub.d ; then
    update_grub_dir=./grub.d
    test_mode=true
  fi
fi

found=false
old_IFS="$IFS"
IFS=:
for i in $PATH ; do
  if test -x "$i/grub-probe" ; then
    found=true
    break
  fi
done
IFS="$old_IFS"
if ${found} ; then : ; else
  echo "$0: grub-probe not found in PATH." >&2
  exit 1
fi

if ${test_mode} ; then : ; else
  mkdir -p ${grub_prefix}
  exec > ${grub_cfg}.new
  chmod 444 ${grub_cfg}.new
fi

if test -f ${sysconfdir}/default/grub ; then
  . ${sysconfdir}/default/grub
fi

echo "Updating ${grub_cfg} ..." >&2

cat << EOF
#
# DO NOT EDIT THIS FILE
#
# It is automaticaly generated by $0 using templates from ${update_grub_dir}
#
EOF

export GRUB_DEVICE="`grub-probe --target=device ${grub_prefix}`"
export GRUB_DRIVE="`grub-probe --target=drive ${grub_prefix}`"
export GRUB_FS="`grub-probe --target=fs ${grub_prefix}`"

for i in ${update_grub_dir}/* ; do
  case $i in
    # emacsen backup files. FIXME: support other editors
    *~) ;;
    *)
      if test -x $i ; then
        echo
        echo "### BEGIN $i ###"
        $i
        echo "### END $i ###"
      fi
    ;;
  esac
done

# none of the children aborted with error, install the new grub.cfg
if ${test_mode} ; then : ; else
  mv ${grub_cfg}.new ${grub_cfg}
fi

echo "done" >&2
